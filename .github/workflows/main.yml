name: Smoke test (Linux)
on: [push, workflow_dispatch]

jobs:
  smoke:
    name: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
      DISPLAY: :0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Prepare Jars for smoke testing (Mac and Ubuntu)
        if: runner.os != 'Windows'
        run: |
          mkdir jars
          cd jars
          wget -q https://github.com/Cyolune/ip/releases/download/A-Release/sana.jar
          mv ../RepoSense.jar .
          ls -lh

      - name: Prepare Jars for smoke testing (Windows)
        if: runner.os == 'Windows'
        run: |
          New-Item jars -itemtype directory
          cd jars
          Invoke-WebRequest -OutFile sana.jar -Uri https://github.com/Cyolune/ip/releases/download/A-Release/sana.jar
          Move-Item -Path ..\RepoSense.jar -Destination .\RepoSense.jar
          Get-ChildItem

      - name: Perform smoke test (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
          sleep 10
          ps aux | grep Xvfb
          python3 linux.py
          mv linux.csv ${{ runner.os }}.csv

      - name: Perform smoke test (Mac)
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz
          brew install coreutils
          sudo /opt/X11/libexec/privileged_startx
          PATH=$PATH:/opt/X11/bin
          sudo Xvfb $DISPLAY -screen 0 1280x1024x24 &
          sleep 10
          ps aux | grep Xvfb
          system_profiler SPDisplaysDataType | grep Resolution
          python3 linux.py
          mv linux.csv ${{ runner.os }}.csv

      - name: Perform smoke test (Windows)
        if: runner.os == 'Windows'
        run: |
          Get-DisplayResolution
          python3 windows.py
          Move-Item -Path .\windows.csv -Destination .\${{ runner.os }}.csv

      - name: Upload result as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: ${{ runner.os }}.csv
